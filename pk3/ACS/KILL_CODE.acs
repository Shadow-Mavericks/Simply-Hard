#Library "KILL_CODE"
#include "zcommon.acs"

// Orb spawning code by StrikerTheHedgefox

script "ON_KILL" KILL
{
	if(!CheckFlag(0, "ISMONSTER")) // Not monster? Don't bother.
		terminate;

	// Get some properties of our monster.
	str Class = GetActorClass(0);
	int Health = GetActorProperty(0, APROP_SpawnHealth);
	int Height = GetActorProperty(0, APROP_Height);
	int Damage = GetActorProperty(0, APROP_Damage);

	// Base velocities for Orbs
	int HOrbSpeed = GetActorProperty(0, APROP_Radius) / 4;
	int VOrbSpeed = Height/6;

	if(HOrbSpeed < 6.0)
		HOrbSpeed = 6.0;

	if(VOrbSpeed < 6.0)
		VOrbSpeed = 6.0;

	int NumOrbs = 0;

	if(GetCVar("sh_orbs_logarithmic"))
	{
		// Base Multiplier * Health / (Health + Speed of Deminishing Return)
		NumOrbs = 50 * Health / (Health + 1500); // Calculate number of Orbs.
	}
	else
	{
		NumOrbs = Health/40;
	}

	// Certain flags add a bonus.
	if(CheckFlag(0, "MISSILEMORE"))			NumOrbs += 1;
	if(CheckFlag(0, "MISSILEEVENMORE"))		NumOrbs += 1;
	if(CheckFlag(0, "SPECTRAL"))			NumOrbs += 1;
	if(CheckFlag(0, "DONTRIP"))				NumOrbs += 1;
	if(CheckFlag(0, "NOICEDEATH"))			NumOrbs += 1;
	if(CheckFlag(0, "STEALTH"))				NumOrbs += 2;
	if(CheckFlag(0, "ALWAYSFAST"))			NumOrbs += 2;
	if(CheckFlag(0, "NORADIUSDMG"))			NumOrbs += 2;
	if(CheckFlag(0, "BOSS"))				NumOrbs += 10; // Bosses get more orbs.

	if(Damage >= 250) // Super high damage enemies (like the white rabbit) double orbs.
		NumOrbs *= 2;

	if(NumOrbs <= 0) // Everything is worth at least one orb.
		NumOrbs = 1;

	if(GetUserVariable(0, "user_extralife_chance") != -1) // -1 = No spawn
	{
		bool doLifeSpawn = false;
		int lifeChance = Random(0, 200);
		if(GetUserVariable(0, "user_extralife_chance") > 0)
		{
			if(lifeChance <= GetUserVariable(0, "user_extralife_chance"))
				doLifeSpawn = true;
		}
		else
		{
			if(Health >= 6000)
				doLifeSpawn = true;
			else if(Health >= 5000 && lifeChance <= 150)
				doLifeSpawn = true;
			else if(Health >= 4000 && lifeChance <= 125)
				doLifeSpawn = true;
			else if(Health >= 3000 && lifeChance <= 100)
				doLifeSpawn = true;
			else if(Health >= 2500 && lifeChance <= 20)
				doLifeSpawn = true;
			else if(Health >= 1000 && lifeChance <= 2)
				doLifeSpawn = true;
			else if(Health >= 500 && lifeChance < 1)
				doLifeSpawn = true;
		}

		if(doLifeSpawn)
		{
			int lifeTID = UniqueTID (0, 0);
			SpawnForced("extralifethingy", GetActorX(0), GetActorY(0), GetActorZ(0)+(Height/2), lifeTID, random(0, 255));
			SetActorVelocity(lifeTID, random(-HOrbSpeed/2, HOrbSpeed/2), random(-HOrbSpeed/2, HOrbSpeed/2), random(2.0, VOrbSpeed), false, false);

			if(Health >= 8000) // Spawn another if health pool is massive.
			{
				lifeTID = UniqueTID (0, 0);
				SpawnForced("extralifethingy", GetActorX(0), GetActorY(0), GetActorZ(0)+(Height/2), lifeTID, random(0, 255));
				SetActorVelocity(lifeTID, random(-HOrbSpeed/2, HOrbSpeed/2), random(-HOrbSpeed/2, HOrbSpeed/2), random(2.0, VOrbSpeed), false, false);

				HudMessageBold(s:"Two extra lives were dropped by a(n) ", n:0;
				HUDMSG_TYPEON | HUDMSG_LOG, 69, CR_CYAN, 0.5, 0.25, 5.0, 0.01, 0.5);
			}
			else
			{
				HudMessageBold(s:"An extra life was dropped by a(n) ", n:0;
				HUDMSG_TYPEON | HUDMSG_LOG, 69, CR_CYAN, 0.5, 0.25, 5.0, 0.01, 0.5);
			}
		}
	}

	for(int i = 0; i < NumOrbs; i++)
	{
		int TID = UniqueTID (0, 0);
		SpawnForced("DEMONENERGY", GetActorX(0), GetActorY(0), GetActorZ(0)+(Height/2), TID, random(0, 255));
		SetActorVelocity(TID, random(-HOrbSpeed, HOrbSpeed), random(-HOrbSpeed, HOrbSpeed), random(2.0, VOrbSpeed), false, false);
		Thing_ChangeTID(TID, 0);
	}

	SetActivatorToTarget(0); // Set activator to the one who killed this monster.

	if(GetCVar("sh_debug"))
		log(s:"DEBUG: ", n:0, s:" killed ", s:Class, s:" [", d:Health, s:"] ", s:"Orbs: ", d:NumOrbs);
}

// Damage Numbers
// --------------
// [JM] Ported from SMMP by StrikerTheHedgefox! (Aka. [JM]) Please ask permission if you want to use this!
function int pow (int x, int n)
{
	int y = 1;
	while (n-- > 0) y *= x;
	return y;
}

function int GetDigit(int Num, int Digit)
{
	return (Num / pow(10, Digit)) % 10 ;
}

function void PrintDamage(int damage)
{
	if(damage > 9999)
		damage = 9999;

	int Digit1 = GetDigit(damage, 0);
	int Digit2 = GetDigit(damage, 1);
	int Digit3 = GetDigit(damage, 2);
	int Digit4 = GetDigit(damage, 3);

	int height = GetActorProperty(0, APROP_Height);
	if(GetActorProperty(0, APROP_Health) <= 0)
		height *= 4;

	int x = GetActorX(0) + Random(-10.0, 10.0);
	int y = GetActorY(0) + Random(-10.0, 10.0);
	int z = GetActorZ(0) + height + Random(-10.0, 5.0);

	int ceilingZ = GetActorCeilingZ(0);
	if(z+10.0 >= ceilingZ)
		z = (ceilingZ-10.0) + Random(-10.0, 0.0);

	int SelectedColor = Random(0, 6);
	int TranslationNumber = Random(6000, 6500);

	switch (SelectedColor)
	{
		case 0: // Red
			CreateTranslation(TranslationNumber, 160:160=[255, 0, 0]:[255, 0, 0]);
			break;
		case 1: // Green
			CreateTranslation(TranslationNumber, 160:160=[0, 255, 0]:[0, 255, 0]);
			break;
		case 2: // Blue
			CreateTranslation(TranslationNumber, 160:160=[0, 0, 255]:[0, 0, 255]);
			break;
		case 3: // Yellow
			CreateTranslation(TranslationNumber, 160:160=[255, 255, 0]:[255, 255, 0]);
			break;
		case 4: // Cyan
			CreateTranslation(TranslationNumber, 160:160=[0, 255, 255]:[0, 255, 255]);
			break;
		case 5: // Magenta
			CreateTranslation(TranslationNumber, 160:160=[255, 0, 255]:[255, 0, 255]);
			break;
		case 6: // White
			CreateTranslation(TranslationNumber, 160:160=[255, 255, 255]:[255, 255, 255]);
			break;
	}

	int NumberID = Random(6000, 6500);

	if(Digit1 == 0) { Spawn("Digit1Num0", x, y, z, NumberID, 0); }
	else if(Digit1 == 1) { Spawn("Digit1Num1", x, y, z, NumberID, 0); }
	else if(Digit1 == 2) { Spawn("Digit1Num2", x, y, z, NumberID, 0); }
	else if(Digit1 == 3) { Spawn("Digit1Num3", x, y, z, NumberID, 0); }
	else if(Digit1 == 4) { Spawn("Digit1Num4", x, y, z, NumberID, 0); }
	else if(Digit1 == 5) { Spawn("Digit1Num5", x, y, z, NumberID, 0); }
	else if(Digit1 == 6) { Spawn("Digit1Num6", x, y, z, NumberID, 0); }
	else if(Digit1 == 7) { Spawn("Digit1Num7", x, y, z, NumberID, 0); }
	else if(Digit1 == 8) { Spawn("Digit1Num8", x, y, z, NumberID, 0); }
	else if(Digit1 == 9) { Spawn("Digit1Num9", x, y, z, NumberID, 0); }

	if(damage >= 10)
	{
		if(Digit2 == 0) { Spawn("Digit2Num0", x, y, z, NumberID, 0); }
		else if(Digit2 == 1) { Spawn("Digit2Num1", x, y, z, NumberID, 0); }
		else if(Digit2 == 2) { Spawn("Digit2Num2", x, y, z, NumberID, 0); }
		else if(Digit2 == 3) { Spawn("Digit2Num3", x, y, z, NumberID, 0); }
		else if(Digit2 == 4) { Spawn("Digit2Num4", x, y, z, NumberID, 0); }
		else if(Digit2 == 5) { Spawn("Digit2Num5", x, y, z, NumberID, 0); }
		else if(Digit2 == 6) { Spawn("Digit2Num6", x, y, z, NumberID, 0); }
		else if(Digit2 == 7) { Spawn("Digit2Num7", x, y, z, NumberID, 0); }
		else if(Digit2 == 8) { Spawn("Digit2Num8", x, y, z, NumberID, 0); }
		else if(Digit2 == 9) { Spawn("Digit2Num9", x, y, z, NumberID, 0); }
	}

	if(damage >= 100)
	{
		if(Digit3 == 0) { Spawn("Digit3Num0", x, y, z, NumberID, 0); }
		else if(Digit3 == 1) { Spawn("Digit3Num1", x, y, z, NumberID, 0); }
		else if(Digit3 == 2) { Spawn("Digit3Num2", x, y, z, NumberID, 0); }
		else if(Digit3 == 3) { Spawn("Digit3Num3", x, y, z, NumberID, 0); }
		else if(Digit3 == 4) { Spawn("Digit3Num4", x, y, z, NumberID, 0); }
		else if(Digit3 == 5) { Spawn("Digit3Num5", x, y, z, NumberID, 0); }
		else if(Digit3 == 6) { Spawn("Digit3Num6", x, y, z, NumberID, 0); }
		else if(Digit3 == 7) { Spawn("Digit3Num7", x, y, z, NumberID, 0); }
		else if(Digit3 == 8) { Spawn("Digit3Num8", x, y, z, NumberID, 0); }
		else if(Digit3 == 9) { Spawn("Digit3Num9", x, y, z, NumberID, 0); }
	}

	if(damage >= 1000)
	{
		if(Digit4 == 0) { Spawn("Digit4Num0", x, y, z, NumberID, 0); }
		else if(Digit4 == 1) { Spawn("Digit4Num1", x, y, z, NumberID, 0); }
		else if(Digit4 == 2) { Spawn("Digit4Num2", x, y, z, NumberID, 0); }
		else if(Digit4 == 3) { Spawn("Digit4Num3", x, y, z, NumberID, 0); }
		else if(Digit4 == 4) { Spawn("Digit4Num4", x, y, z, NumberID, 0); }
		else if(Digit4 == 5) { Spawn("Digit4Num5", x, y, z, NumberID, 0); }
		else if(Digit4 == 6) { Spawn("Digit4Num6", x, y, z, NumberID, 0); }
		else if(Digit4 == 7) { Spawn("Digit4Num7", x, y, z, NumberID, 0); }
		else if(Digit4 == 8) { Spawn("Digit4Num8", x, y, z, NumberID, 0); }
		else if(Digit4 == 9) { Spawn("Digit4Num9", x, y, z, NumberID, 0); }
	}

	Thing_SetTranslation(NumberID, TranslationNumber);
	SetActorVelocity(NumberID, 0, 0, 0.25, 0, 0);
}

function void hit_marker(bool doSound)
{
	if(doSound)
		LocalAmbientSound("hitsound", 64);
	
	//PlaySound(0, "hitsound", CHAN_AUTO, 0.75, 0, ATTN_NONE, true);
	
	SetHudSize(1024, 768, 0);
	SetFont("HITMARK");
	HudMessage(s:"A";
	HUDMSG_FADEOUT, 6969, CR_UNTRANSLATED, 512.4, 384.0, 1, 0.5);
}

// [JM] These defs are missing from ACC for some buttfuckin' reason.
#define GAMEEVENT_PLAYERFRAGS			0
#define GAMEEVENT_MEDALS				1
#define GAMEEVENT_CAPTURES				2
#define GAMEEVENT_TOUCHES				3
#define GAMEEVENT_RETURNS				4
#define GAMEEVENT_ROUND_STARTS			5
#define GAMEEVENT_ROUND_ENDS			6
#define GAMEEVENT_ROUND_ABORTED			7
#define GAMEEVENT_CHAT					8
#define GAMEEVENT_PLAYERCONNECT			9
#define GAMEEVENT_ACTOR_SPAWNED			10
#define GAMEEVENT_ACTOR_DAMAGED			11
#define GAMEEVENT_ACTOR_ARMORDAMAGED	12
#define GAMEEVENT_DOMINATION_CONTROL	13
#define GAMEEVENT_DOMINATION_POINT		14
#define GAMEEVENT_PLAYERLEAVESSERVER	15

script "EVENT_HANDLER" (int type, int arg1, int arg2) EVENT
{
	if(type == GAMEEVENT_ACTOR_DAMAGED)
	{
		bool isMonster = CheckFlag(0, "ISMONSTER");
		bool canBleed = !CheckFlag(0, "NOBLOOD");
		bool doNumbers = false;

		if (isMonster)
			doNumbers = true;

		if(SetActivator(0, AAPTR_DAMAGE_SOURCE))
		{
			if(PlayerNumber() != -1)
			{
				if(isMonster)
					hit_marker(canBleed);
				
				// Gosimer's Berserk Buff
				if(CheckActorClass(0, "Gosimer") && CheckInventory("PowerStrength"))
				{
					arg1 += 1;
					SetResultValue(arg1);
				}
			}
		}

		if(SetActivator(0, AAPTR_DAMAGE_TARGET) && doNumbers)
		{
			GiveInventory("DamageTallyHack", arg1);
			delay(1);
			int damage = CheckInventory("DamageTallyHack");
			if(damage > 0)
			{
				PrintDamage(damage);
				TakeInventory("DamageTallyHack", 9999);
			}
		}
	}
}
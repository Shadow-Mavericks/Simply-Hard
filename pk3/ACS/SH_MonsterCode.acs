#library "SH_MonsterCode"
#include "zcommon.acs"

//----------------------------------------------//

// this script manages the circle attack
// former 440
script "DivineShadow::Circle" (void)
{
	int cX = GetActorX(0);
	int cY = GetActorY(0);
	int cZ = GetActorZ(0);
	
	//ACS_NamedExecuteAlways("DivineShadow::Pentagram", 0, cX, cY, cZ); // not WithResult because it needs to be clientside for Zan
	
	// first, display the "warning"
	ActivatorSound("weapons/bfgf", 127);
	
	int i;
	int size = 256;
	int duration = 35*3;
	for (i = 0; i < duration; i++)
	{
		if (GetActorProperty(0, APROP_Health) <= 0)
			break;
	
		SetActorState(0, "MissileLoop", true);
		SetActorVelocity(0, 0, 0, 0, false, true);
		SetActorPosition(0, cX, cY, cZ, false);
		
		size = 256;
		if (i < 35) size = i*256/35;
		
		if (i >= 35 && i < 70)
		{
			int rndI = random(0,4);
			for (int j = 0; j < rndI; j++)
			{
				//DivineShadowAtkSmall = actor
				//1) pick random angle
				//2) pick random distance
				int angle = random(0.0, 1.0);
				int dist = random(48, size);
				
				int tX = cX + cos(angle) * dist;
				int tY = cY + sin(angle) * dist;
				int tZ = cZ;
				
				int oldtag = ActivatorTID();
				int tmptid1 = UniqueTID();
				Thing_ChangeTID(0, tmptid1);
				int tmptid2 = UniqueTID();
				SpawnForced("DivineShadowAtkSmall", tX, tY, tZ, tmptid2, angle);
				SetActivator(tmptid2);
				SetPointer(AAPTR_TARGET, tmptid1, 0, 0);
				SetActivator(tmptid1);
				Thing_ChangeTID(0, oldtag);
				ACS_NamedExecuteWithResult("DivineShadow::CircleWorker", tmptid2, angle, 0, 0);
				//printbold(s:"SPAWNING @ ", f:tX, s:",", f:tY, s:",", f:tZ);
			}
		}

		Delay(1);
	}
	
	// update 25.01.2016: actor should go to death if dead
	if (GetActorProperty(0, APROP_Health) <= 0)
		SetActorState(0, "Death", true);
	else SetActorState(0, "See", true);
}

// this script manages individual projectiles for circle attack
// former 441
script "DivineShadow::CircleWorker" (int tmptid, int angle)
{
	// tmptid = unique. don't bother changing it because projectiles shouldnt have a tid anyway.
	SetActivator(tmptid);
	int aZ = GetActorZ(0);

	for (int i = 0; i < 35; i++)
	{
		// die if parent actor dies (target)
		SetActivator(0, AAPTR_TARGET);
		bool badhealth = (GetActorProperty(0, APROP_Health) <= 0);
		SetActivator(tmptid);
		if (badhealth)
		{
			SetActorState(0, "Death", true);
			terminate;
		}
		aZ += 1.0;
		SetActorPosition(0, GetActorX(0), GetActorY(0), aZ, false);
		Delay(1);
	}

	// then launch
	ThrustThing(angle>>8, 20, false, 0);
}

// this script holds the vile projectile for a while [c]
// former 450
script "DivineShadow::HoldBall" (void)
{
	int vX = GetActorVelX(0);
	int vY = GetActorVelY(0);
	int vZ = GetActorVelZ(0);

	SetActorVelocity(0, 0, 0, 0, false, true);
	Delay(35);
	SetActorVelocity(0, vX, vY, vZ, false, true);
}

// former 451
script "DivineShadow::HoldVile" (void)
{
	int cX = GetActorX(0);
	int cY = GetActorY(0);
	int cZ = GetActorZ(0);
	
	for (int i = 0; i < 35; i++)
	{
		SetActorVelocity(0, 0, 0, 0, false, true);
		SetActorPosition(0, cX, cY, cZ, false);
		Delay(1);
	}
}
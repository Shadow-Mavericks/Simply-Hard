# HG changeset patch
# User StrikerTheHedgefox <mossj32@gmail.com>
# Date 1744152157 10800
#      Tue Apr 08 19:42:37 2025 -0300
# Node ID 9b5f13489e42eb09008e4f6fe09ace50179512e8
# Parent  99695749cc75692471255d6769981690c29a4ae0
# EXP-Topic strikers_stuff
Add SBarFlags bitfield for SBarInfo, for a new "hidelives = true/false" SBARINFO token, and other possible future tokens.

diff -r 99695749cc75 -r 9b5f13489e42 docs/zandronum-history.txt
--- a/docs/zandronum-history.txt	Sun Apr 06 07:20:51 2025 -0300
+++ b/docs/zandronum-history.txt	Tue Apr 08 19:42:37 2025 -0300
@@ -20,6 +20,7 @@
 *+	- FakeInventory actors can now make use of the "Activation" thing property, vastly increasing its utility. Allows the item to target the player collecting the item and vice/versa, or for the item itself to be the activator. [StrikerTheHedgefox]
 *-	- Send inventory that inherits from CustomInventory and Inventory on full update. Fixes issues where weapon checks for inventory fails for late-joining clients, or after a map change. [StrikerTheHedgefox]
 +	- Added A_JumpTo codepointer, which jumps to a state instantly & with prediction. Useful for jumping to an ancestor actor's state without the issues A_Jump with a 256 chance has. [StrikerTheHedgefox]
++	- Added "hidelives = true/false" token to SBARINFO, allowing to disable the built-in lives display on the HUD. [StrikerTheHedgefox]
 +	- Backported A_WeaponOffset from ZDoom Revision 115dbd0, with alterations necessary for Zandronum's current codebase. [StrikerTheHedgefox]
 -	- Fix a crash that can occur when using the "colors" DECALDEF token, when the decal's image was in the "graphics" folder. [StrikerTheHedgefox]
 -	- Fix truncation of translation index in decals. [StrikerTheHedgefox]
diff -r 99695749cc75 -r 9b5f13489e42 src/g_doom/doom_sbar.cpp
--- a/src/g_doom/doom_sbar.cpp	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_doom/doom_sbar.cpp	Tue Apr 08 19:42:37 2025 -0300
@@ -901,7 +901,7 @@
 	}		
 
 	// [BB] Draw number of lives left.
-	if ( GAMEMODE_AreLivesLimited() )
+	if ( GAMEMODE_AreLivesLimited() && !(SBarFlags & SBARFLAG_HIDELIVES) )
 	{
 		ulCurXPos = 4;
 		ulCurYPos = screenHeight - 4 - ( TexMan["MEDIA0"]->GetHeight( ) + 4 ) - ( TexMan["ARM1A0"]->GetHeight( ) + 4 ) - 14;
diff -r 99695749cc75 -r 9b5f13489e42 src/g_shared/sbar.h
--- a/src/g_shared/sbar.h	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_shared/sbar.h	Tue Apr 08 19:42:37 2025 -0300
@@ -338,6 +338,11 @@
 		ST_DEADFACE			= ST_GODFACE + 1
 	};
 
+	enum // [JM] Bar flags
+	{
+		SBARFLAG_HIDELIVES = (1 << 0),
+	};
+
 	DBaseStatusBar (int reltop, int hres=320, int vres=200);
 	void Destroy ();
 
@@ -405,6 +410,7 @@
 	int ST_X, ST_Y;
 	int RelTop;
 	int HorizontalResolution, VirticalResolution;
+	int SBarFlags; // [JM]
 	bool Scaled;
 	bool Centering;
 	bool FixedOrigin;
diff -r 99695749cc75 -r 9b5f13489e42 src/g_shared/sbarinfo.cpp
--- a/src/g_shared/sbarinfo.cpp	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_shared/sbarinfo.cpp	Tue Apr 08 19:42:37 2025 -0300
@@ -374,6 +374,7 @@
 	SBARINFO_MUGSHOT,
 	SBARINFO_CREATEPOPUP,
 	SBARINFO_APPENDSTATUSBAR, // [Binary] Additive SBARINFO implementation.
+	SBARINFO_HIDELIVES,
 };
 
 enum //Bar types
@@ -403,6 +404,7 @@
 	"mugshot",
 	"createpopup",
 	"appendstatusbar", // [Binary] Additive SBARINFO implementation.
+	"hidelives", // [JM] Hides built-in lives display.
 	NULL
 };
 
@@ -657,6 +659,20 @@
 				this->huds[barNum]->Parse(sc, false);
 				break;
 			}
+			case SBARINFO_HIDELIVES: //draws the border instead of an HOM
+			{
+				if (sc.CheckToken(TK_True))
+				{
+					sbarFlags |= DBaseStatusBar::SBARFLAG_HIDELIVES;
+				}
+				else
+				{
+					sc.MustGetToken(TK_False);
+					sbarFlags &= ~DBaseStatusBar::SBARFLAG_HIDELIVES;
+				}
+				sc.MustGetToken(';');
+				break;
+			}
 			case SBARINFO_MUGSHOT:
 			{
 				sc.MustGetToken(TK_StringConst);
@@ -813,6 +829,7 @@
 	interpolateArmor = false;
 	completeBorder = false;
 	lowerHealthCap = true;
+	sbarFlags = 0;
 	interpolationSpeed = 8;
 	armorInterpolationSpeed = 8;
 	height = 0;
@@ -1004,6 +1021,7 @@
 		Images.Init(&patchnames[0], patchnames.Size());
 
 		CompleteBorder = script->completeBorder;
+		SBarFlags = script->sbarFlags; // [JM]
 	}
 
 	~DSBarInfo ()
diff -r 99695749cc75 -r 9b5f13489e42 src/g_shared/sbarinfo.h
--- a/src/g_shared/sbarinfo.h	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_shared/sbarinfo.h	Tue Apr 08 19:42:37 2025 -0300
@@ -105,6 +105,7 @@
 	int armorInterpolationSpeed;
 	int height;
 	int gameType;
+	int sbarFlags; // [JM]
 	FMugShot MugShot;
 	int resW;
 	int resH;
diff -r 99695749cc75 -r 9b5f13489e42 src/g_shared/shared_sbar.cpp
--- a/src/g_shared/shared_sbar.cpp	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_shared/shared_sbar.cpp	Tue Apr 08 19:42:37 2025 -0300
@@ -244,6 +244,7 @@
 DBaseStatusBar::DBaseStatusBar (int reltop, int hres, int vres)
 {
 	CompleteBorder = false;
+	SBarFlags = 0; // [JM]
 	Centering = false;
 	FixedOrigin = false;
 	CrosshairSize = FRACUNIT;
diff -r 99695749cc75 -r 9b5f13489e42 src/g_shared/st_hud.cpp
--- a/src/g_shared/st_hud.cpp	Sun Apr 06 07:20:51 2025 -0300
+++ b/src/g_shared/st_hud.cpp	Tue Apr 08 19:42:37 2025 -0300
@@ -318,7 +318,7 @@
 					HUD_RenderRankAndSpread( ulDisplayPlayer );
 
 				// [BB] Draw number of lives left.
-				if ( GAMEMODE_AreLivesLimited( ))
+				if ( GAMEMODE_AreLivesLimited( ) && !(StatusBar->SBarFlags & DBaseStatusBar::SBARFLAG_HIDELIVES) )
 				{
 					FString text;
 					text.Format( "Lives: %d / %d", static_cast<unsigned int>( players[ulDisplayPlayer].ulLivesLeft + 1 ), GAMEMODE_GetMaxLives( ));
